import tkinter as tk
import time
import threading
import random

class TypeTest:

    def __init__(self):

        self.root = tk.Tk()
        self.root.title("Typing test")
        self.root.geometry("800x600")

        self.text = open("ttest.txt", "r").read().split("\n")

        self.frame = tk.Frame(self.root)

        self.sample_label = tk.Label(self.frame, text=random.choice(self.text), font=("Helvetica", 18))
        self.sample_label.grid(row=0, column=0, columnspan=2, padx=5, pady=5)


        self.textbox = tk.Entry(self.frame, width=40, font=("Arial", 22))
        self.textbox.grid(row=1, column=0, columnspan=2, padx=5, pady=10)
        self.textbox.bind("<KeyRelease>", self.start)


        self.speed = tk.Label(self.frame, text="Speed: \n0.00 CPS\n0.00 CPM\n0.00 WPS\n0.00 WPM", font=("Helvetica", 18))
        self.speed.grid(row=2, column=0, columnspan=2, padx=5, pady=5)


        self.reset_button = tk.Button(self.frame, text="Reset", command=self.reset, font=("Arial", 22))
        self.reset_button.grid(row=3, column=0, columnspan=2, padx=20, pady=25)

        self.frame.pack(expand=True)

        self.counter = 0
        self.running = False

        self.root.mainloop()

    def start(self, event):
        if not self.running:
            if not event.keycode in [9, 16, 17, 18, 27, 93]:
                self.running = True
                t = threading.Thread(target=self.time_thread)
                t.start()
        if not self.sample_label.cget('text').startswith(self.textbox.get()):
            self.textbox.config(fg="red")
        else:
            self.textbox.config(fg="black")

        if self.textbox.get() == self.sample_label.cget('text'):
            self.running = False
            self.textbox.config(fg="green")

    def time_thread(self):
        while self.running:
            time.sleep(0.1)
            self.counter += 0.1
            cps = len(self.textbox.get()) / self.counter
            cpm = cps * 60
            wps = len(self.textbox.get().split()) / self.counter
            wpm = wps * 60
            self.speed.config(text=f"Speed: \n{cps:.2f} CPS\n{cpm:.2f} CPM\n {wps:.2f} WPS\n{wpm:.2f} WPM")
    def reset(self):
        self.running = False
        self.counter = 0
        self.speed.config(text="Speed: \n0.00 CPS\n0.00 CPM\n0.00 WPS\n0.00 WPM")
        self.sample_label.config(text=random.choice(self.text))
        self.textbox.delete(0, tk.END)

TypeTest()
